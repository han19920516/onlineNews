{"version":3,"sources":["components/footer/Footer.module.css","components/Layout/Layout.js","components/Backdrop/Backdrop.js","components/Toolbar/Toolbar.js","components/Navigation/MobileToggle/MobileToggle.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/MobileNavigation/MobileNavigation.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorHandler/ErrorHandler.js","components/Feed/Post/Post.js","components/Form/Input/Input.js","components/Form/Input/FilePicker.js","components/Image/Image.js","util/validators.js","util/image.js","components/Feed/FeedEdit/FeedEdit.js","components/Paginator/Paginator.js","components/Loader/Loader.js","pages/Feed/Feed.js","pages/Feed/SinglePost/SinglePost.js","pages/Auth/Auth.js","pages/Auth/Login.js","pages/Auth/Signup.js","components/footer/Footer.js","App.js","index.js"],"names":["module","exports","footer__section","content__section","nav","nav_container","layout","props","react_default","a","createElement","react","className","header","mobileNav","children","backdrop","ReactDOM","createPortal","open","join","onClick","document","getElementById","toolbar","mobileToggle","onOpen","logo","navItems","id","text","link","auth","navigationItems","concat","Object","toConsumableArray","filter","item","isAuth","map","key","mobile","NavLink","to","exact","onChoose","onLogout","mainNavigation","MobileToggle_MobileToggle","onOpenMobileNav","Logo_Logo","NavigationItems_NavigationItems","mobileNavigation","onChooseItem","button","Link","design","mode","disabled","loading","type","modal","title","Button_Button","onCancelModal","onAcceptModal","acceptEnabled","isLoading","errorHandler","error","Backdrop_Backdrop","onHandle","Modal_Modal","message","post","author","date","onStartEdit","onDelete","input","label","htmlFor","control","valid","touched","required","value","placeholder","onChange","e","target","files","onBlur","rows","filePicker","image","style","backgroundImage","imageUrl","backgroundSize","contain","backgroundPosition","left","trim","length","config","isValid","min","max","email","test","generateBase64FromImage","imageFile","reader","FileReader","promise","Promise","resolve","reject","onload","result","onerror","err","readAsDataURL","POST_FORM","validators","content","FeedEdit","state","postForm","formIsValid","imagePreview","postInputChangeHandler","then","b64","_this","setState","catch","prevState","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","f","updatedForm","objectSpread","defineProperty","inputName","inputBlurHandler","cancelPostChangeHandler","onCancelEdit","acceptPostChangeHandler","onFinishEdit","prevProps","this","editing","selectedPost","imagePath","Input_Input","bind","FilePicker","Image_Image","Component","paginator","currentPage","onPrevious","lastPage","onNext","loader","Feed","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","loadPosts","direction","page","graphql","query","variables","fetch","headers","Authorization","token","Content-Type","method","body","JSON","stringify","res","json","resData","errors","Error","console","log","data","getPosts","catchError","statusUpdateHandler","event","preventDefault","alert","newPostHandler","startEditPostHandler","postId","find","p","_id","cancelEditHandler","finishEditHandler","_callee","postData","formData","regenerator_default","wrap","_context","prev","next","FormData","append","graphqlData","filePath","Content-type","creator","name","createdAt","createPost","newPosts","unshift","pop","stop","statusInputChangeHandler","deletePostHandler","Content-TYpe","_this2","getStatus","_this3","ErrorHandler","Feed_FeedEdit_FeedEdit","onSubmit","textAlign","marginTop","Loader_Loader","Paginator_Paginator","Math","ceil","Post_Post","Date","toLocaleDateString","SinglePost","match","params","process","getPost","Login","loginForm","password","inputChangeHandler","Login_createForOfIteratorHelper","Auth_Auth","onLogin","color","Signup","signupForm","Signup_createForOfIteratorHelper","onSignup","Footer","classes","App","showBackdrop","showMobileNav","userId","authLoading","mobileNavHandler","isOpen","backdropClickHandler","logoutHandler","localStorage","removeItem","loginHandler","authData","graphqlQuery","login","setItem","expiryDate","getTime","toISOString","setAutoLogout","signupHandler","history","replace","milliseconds","setTimeout","getItem","remainingMilliseconds","routes","Switch","Route","path","render","Auth_Login","assign","Auth_Signup","Redirect","pages_Feed_Feed","Feed_SinglePost_SinglePost","Layout_Layout","Toolbar_Toolbar","MainNavigation_MainNavigation","MobileNavigation_MobileNavigation","footer_Footer","withRouter","BrowserRouter","src_App_0"],"mappings":"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","file":"static/js/main.7b8578c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer__section\":\"Footer_footer__section__WdyS_\",\"content__section\":\"Footer_content__section__3ZUct\",\"nav\":\"Footer_nav__siPwj\",\"nav_container\":\"Footer_nav_container__BJWoO\"};","import React, { Fragment } from 'react';\n\nimport './Layout.css';\n\nconst layout = props => (\n  <Fragment>\n    <header className=\"main-header\">{props.header}</header>\n    {props.mobileNav}\n    <main className=\"content\">{props.children}</main>\n  </Fragment>\n);\n\nexport default layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>\n  ReactDOM.createPortal(\n    <div\n      className={['backdrop', props.open ? 'open' : ''].join(' ')}\n      onClick={props.onClick}\n    />,\n    document.getElementById('backdrop-root')\n  );\n\nexport default backdrop;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst toolbar = props => (\n    <div className=\"toolbar\">\n       {props.children}\n    </div>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './MobileToggle.css';\n\nconst mobileToggle = props => (\n  <button className=\"mobile-toggle\" onClick={props.onOpen}>\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n  </button>\n);\n\nexport default mobileToggle;\n","import React from 'react';\n\nimport './Logo.css';\n\nconst logo = props => <h1 className=\"logo\">MessageNode</h1>;\n\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItems.css';\n\nconst navItems = [\n  { id: 'feed', text: 'Feed', link: '/', auth: true },\n  { id: 'login', text: 'Login', link: '/', auth: false },\n  { id: 'signup', text: 'Signup', link: '/signup', auth: false }\n];\n\nconst navigationItems = props => [\n  ...navItems.filter(item => item.auth === props.isAuth).map(item => (\n    <li\n      key={item.id}\n      className={['navigation-item', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavLink to={item.link} exact onClick={props.onChoose}>\n        {item.text}\n      </NavLink>\n    </li>\n  )),\n  props.isAuth && (\n    <li className=\"navigation-item\" key=\"logout\">\n      <button onClick={props.onLogout}>Logout</button>\n    </li>\n  )\n];\n\nexport default navigationItems;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport MobileToggle from '../MobileToggle/MobileToggle';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <nav className=\"main-nav\">\n    <MobileToggle onOpen={props.onOpenMobileNav} />\n    <div className=\"main-nav__logo\">\n      <NavLink to=\"/\">\n        <Logo />\n      </NavLink>\n    </div>\n    <div className=\"spacer\" />\n    <ul className=\"main-nav__items\">\n      <NavigationItems isAuth={props.isAuth} onLogout={props.onLogout} />\n    </ul>\n  </nav>\n);\n\nexport default mainNavigation;\n","import React from 'react';\n\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './MobileNavigation.css';\n\nconst mobileNavigation = props => (\n  <nav className={['mobile-nav', props.open ? 'open' : ''].join(' ')}>\n    <ul\n      className={['mobile-nav__items', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavigationItems\n        mobile\n        onChoose={props.onChooseItem}\n        isAuth={props.isAuth}\n        onLogout={props.onLogout}\n      />\n    </ul>\n  </nav>\n);\n\nexport default mobileNavigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst button = props =>\n  !props.link ? (\n    <button\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      type={props.type}\n    >\n      {props.loading ? 'Loading...' : props.children}\n    </button>\n  ) : (\n    <Link\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      to={props.link}\n    >\n      {props.children}\n    </Link>\n  );\n\nexport default button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '../Button/Button';\nimport './Modal.css';\n\nconst modal = props =>\n  ReactDOM.createPortal(\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"modal__content\">{props.children}</div>\n      <div className=\"modal__actions\">\n        <Button design=\"danger\" mode=\"flat\" onClick={props.onCancelModal}>\n          Cancel\n        </Button>\n        <Button\n          mode=\"raised\"\n          onClick={props.onAcceptModal}\n          disabled={!props.acceptEnabled}\n          loading={props.isLoading}\n        >\n          Accept\n        </Button>\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n\nexport default modal;\n","import React, { Fragment } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Modal from '../Modal/Modal';\n\nconst errorHandler = props => (\n  <Fragment>\n    {props.error && <Backdrop onClick={props.onHandle} />}\n    {props.error && (\n      <Modal\n        title=\"An Error Occurred\"\n        onCancelModal={props.onHandle}\n        onAcceptModal={props.onHandle}\n        acceptEnabled\n      >\n        <p>{props.error.message}</p>\n      </Modal>\n    )}\n  </Fragment>\n);\n\nexport default errorHandler;\n","import React from 'react';\n\nimport Button from '../../Button/Button';\nimport './Post.css';\n\nconst post = props => (\n  <article className=\"post\">\n    <header className=\"post__header\">\n      <h3 className=\"post__meta\">\n        Posted by {props.author} on {props.date}\n      </h3>\n      <h1 className=\"post__title\">{props.title}</h1>\n    </header>\n    {/* <div className=\"post__image\">\n      <Image imageUrl={props.image} contain />\n    </div>\n    <div className=\"post__content\">{props.content}</div> */}\n    <div className=\"post__actions\">\n      <Button mode=\"flat\" link={props.id}>\n        View\n      </Button>\n      <Button mode=\"flat\" onClick={props.onStartEdit}>\n        Edit\n      </Button>\n      <Button mode=\"flat\" design=\"danger\" onClick={props.onDelete}>\n        Delete\n      </Button>\n    </div>\n  </article>\n);\n\nexport default post;\n","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => (\n  <div className=\"input\">\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\n    {props.control === 'input' && (\n      <input\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        type={props.type}\n        id={props.id}\n        required={props.required}\n        value={props.value}\n        placeholder={props.placeholder}\n        onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n        onBlur={props.onBlur}\n      />\n    )}\n    {props.control === 'textarea' && (\n      <textarea\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        id={props.id}\n        rows={props.rows}\n        required={props.required}\n        value={props.value}\n        onChange={e => props.onChange(props.id, e.target.value)}\n        onBlur={props.onBlur}\n      />\n    )}\n  </div>\n);\n\nexport default input;\n","import React from 'react';\n\nimport './Input.css';\n\nconst filePicker = props => (\n  <div className=\"input\">\n    <label htmlFor={props.id}>{props.label}</label>\n    <input\n      className={[\n        !props.valid ? 'invalid' : 'valid',\n        props.touched ? 'touched' : 'untouched'\n      ].join(' ')}\n      type=\"file\"\n      id={props.id}\n      onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n      onBlur={props.onBlur}\n    />\n  </div>\n);\n\nexport default filePicker;\n","import React from 'react';\n\nimport './Image.css';\n\nconst image = props => (\n  <div\n    className=\"image\"\n    style={{\n      backgroundImage: `url('${props.imageUrl}')`,\n      backgroundSize: props.contain ? 'contain' : 'cover',\n      backgroundPosition: props.left ? 'left' : 'center'\n    }}\n  />\n);\n\nexport default image;\n","export const required = value => value.trim() !== '';\n\nexport const length = config => value => {\n  let isValid = true;\n  if (config.min) {\n    isValid = isValid && value.trim().length >= config.min;\n  }\n  if (config.max) {\n    isValid = isValid && value.trim().length <= config.max;\n  }\n  return isValid;\n};\n\nexport const email = value =>\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n    value\n  );\n","export const generateBase64FromImage = imageFile => {\n  const reader = new FileReader();\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = e => resolve(e.target.result);\n    reader.onerror = err => reject(err);\n  });\n\n  reader.readAsDataURL(imageFile);\n  return promise;\n};\n","import React, { Component, Fragment } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\n\nconst POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  },\n  image: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required]\n  },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  }\n};\n\nclass FeedEdit extends Component {\n  state = {\n    postForm: POST_FORM,\n    formIsValid: false,\n    imagePreview: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.editing &&\n      prevProps.editing !== this.props.editing &&\n      prevProps.selectedPost !== this.props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: this.props.selectedPost.title,\n          valid: true\n        },\n        image: {\n          ...prevState.postForm.image,\n          value: this.props.selectedPost.imagePath,\n          valid: true\n        },\n        content: {\n          ...prevState.postForm.content,\n          value: this.props.selectedPost.content,\n          valid: true\n        }\n      };\n      this.setState({ postForm: postForm, formIsValid: true });\n    }\n  }\n\n  postInputChangeHandler = (input, value, files) => {\n    if (files) {\n      generateBase64FromImage(files[0])\n        .then(b64 => {\n          this.setState({ imagePreview: b64 });\n        })\n        .catch(e => {\n          this.setState({ imagePreview: null });\n        });\n    }\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.postForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.postForm,\n        [input]: {\n          ...prevState.postForm[input],\n          valid: isValid,\n          value: files ? files[0] : value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        postForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        postForm: {\n          ...prevState.postForm,\n          [input]: {\n            ...prevState.postForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  cancelPostChangeHandler = () => {\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false\n    });\n    this.props.onCancelEdit();\n  };\n\n  acceptPostChangeHandler = () => {\n    const post = {\n      title: this.state.postForm.title.value,\n      image: this.state.postForm.image.value,\n      content: this.state.postForm.content.value\n    };\n    this.props.onFinishEdit(post);\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n      imagePreview: null\n    });\n  };\n\n  render() {\n    return this.props.editing ? (\n      <Fragment>\n        <Backdrop onClick={this.cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={this.state.formIsValid}\n          onCancelModal={this.cancelPostChangeHandler}\n          onAcceptModal={this.acceptPostChangeHandler}\n          isLoading={this.props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'title')}\n              valid={this.state.postForm['title'].valid}\n              touched={this.state.postForm['title'].touched}\n              value={this.state.postForm['title'].value}\n            />\n            <FilePicker\n              id=\"image\"\n              label=\"Image\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'image')}\n              valid={this.state.postForm['image'].valid}\n              touched={this.state.postForm['image'].touched}\n            />\n            <div className=\"new-post__preview-image\">\n              {!this.state.imagePreview && <p>Please choose an image.</p>}\n              {this.state.imagePreview && (\n                <Image imageUrl={this.state.imagePreview} contain left />\n              )}\n            </div>\n            <Input\n              id=\"content\"\n              label=\"Content\"\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'content')}\n              valid={this.state.postForm['content'].valid}\n              touched={this.state.postForm['content'].touched}\n              value={this.state.postForm['content'].value}\n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n}\n\nexport default FeedEdit;\n","import React from 'react';\n\nimport './Paginator.css';\n\nconst paginator = props => (\n  <div className=\"paginator\">\n    {props.children}\n    <div className=\"paginator__controls\">\n      {props.currentPage > 1 && (\n        <button className=\"paginator__control\" onClick={props.onPrevious}>\n          Previous\n        </button>\n      )}\n      {props.currentPage < props.lastPage && (\n        <button className=\"paginator__control\" onClick={props.onNext}>\n          Next\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport default paginator;\n","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;\n","import React, { Component, Fragment } from 'react';\n\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false\n  };\n\n  componentDidMount() {\n    const graphql = {query:`\n      query{\n        getStatus\n      }\n    `};\n    fetch(`http://18.144.156.150/graphql`, {\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        \"Content-Type\":\"application/json\"\n      },\n      method:\"POST\",\n      body:JSON.stringify(graphql)\n    })\n      .then(res => {\n        // if (res.status !== 200) {\n        //   throw new Error('Failed to fetch user status.');\n        // }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({ status: resData.data.getStatus});\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n\n  }\n  \n  loadPosts = direction => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n    const graphql ={\n      query:`\n        query fetchPost($page:Int){\n          getPosts(page:$page){\n            posts {\n              title,\n              content,\n              creator{name},\n              createdAt,\n              _id,\n              imageUrl\n            },\n            totalPosts\n          }\n        }\n      `,\n      variables:{page:page}\n    };\n    fetch(`http://18.144.156.150/graphql`, {\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        \"Content-Type\":\"application/json\"\n      },\n      method:\"POST\",\n      body:JSON.stringify(graphql)\n    })\n      .then(res => {\n        // if (res.status !== 200) {\n        //   throw new Error('Failed to fetch posts.');\n        // }\n        return res.json();\n      })\n      .then(resData => {\n        if(resData.errors){\n          const err = new Error('fetch posts failed');\n          throw err\n        };\n        console.log(resData);\n        this.setState({\n          posts: resData.data.getPosts.posts.map(post => {\n            return {\n              ...post,\n              imagePath: post.imageUrl\n            };\n          }),\n          totalPosts: resData.data.getPosts.totalPosts,\n          postsLoading: false\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = event => {\n    event.preventDefault();\n    const graphql = {query:`\n      mutation setStatus($status:String!){\n        setStatus(status:$status)\n      }  \n    `,\n    variables:{status:this.state.status}\n  };\n    fetch(`http://18.144.156.150/graphql`, {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphql)\n    })\n      .then(res => {\n        // if (res.status !== 200 && res.status !== 201) {\n        //   throw new Error(\"Can't update status!\");\n        // }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        alert('status updated sussessful');\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = postId => {\n    this.setState(prevState => {\n      const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler =async postData => {\n    this.setState({\n      editLoading: true\n    });\n    const formData = new FormData();\n    formData.append('image', postData.image);\n    if(this.state.editPost){\n      formData.append('oldPath',this.state.editPost.imageUrl);\n    }\n    //add new post \n    fetch(`http://18.144.156.150/image`,{\n      method:'PUT',\n      headers:{\n        Authorization: 'Bearer ' + this.props.token,\n      },\n      body:formData\n    }).then(res=>res.json())\n      .then(data=>{\n        let graphqlData;\n        //add\n        if(!this.state.editPost){\n          graphqlData = {query:`\n          mutation addPost($title:String!,$content:String!,$filePath:String!){\n            createPost(inputPost:{\n              title:$title,\n              content:$content,\n              imageUrl:$filePath}){\n              title\n              _id\n              content\n              creator{\n                name\n              }\n              createdAt\n              imageUrl\n              }\n            }\n          `,\n          variables:{\n            title:postData.title,\n            content:postData.content,\n            filePath:data.filePath\n          }\n          }\n        };\n        //edit\n        if(this.state.editPost){\n          console.log('edit post',this.state.editPost._id);\n          graphqlData = {query:`\n          mutation editPost($id:String!,$title:String!,$content:String!,$filePath:String!){\n            editPost(id:$id,userInput:{\n              title:$title,\n              content:$content,\n              imageUrl:$filePath\n            }){\n              title\n              _id\n              content\n              creator{\n                name\n              }\n              createdAt\n              imageUrl\n            }\n          }   \n        `,variables:{\n          id:this.state.editPost._id,\n          title:postData.title,\n          content:postData.content,\n          filePath:data.filePath\n        }\n      }\n            \n        };\n        let url = `http://18.144.156.150/graphql`;\n        let method = 'POST';\n        // if (this.state.editPost) {\n        //   url = 'http://localhost:8080/feed/post/' + this.state.editPost._id;\n        //   method = 'PUT';\n        // }\n\n        fetch(url, {\n          method: method,\n          body: JSON.stringify(graphqlData),\n          headers: {\n            Authorization: 'Bearer ' + this.props.token,\n            \"Content-type\":\"application/json\"\n          }\n        })\n          .then(res => {\n            return res.json();\n          })\n          .then(resData => {\n            console.log(resData);\n            let post;\n            //check it is edit or create post\n            if(!this.state.editPost){\n              post = {\n                _id: resData.data.createPost._id,\n                title:resData.data.createPost.title,\n                content: resData.data.createPost.content,\n                creator: resData.data.createPost.creator.name,\n                createdAt: resData.data.createPost.createdAt,\n                imageUrl:resData.data.createPost.imageUrl\n              };\n            }else{\n              post = {\n                _id: resData.data.editPost._id,\n                title:resData.data.editPost.title,\n                content: resData.data.editPost.content,\n                creator: resData.data.editPost.creator.name,\n                createdAt: resData.data.editPost.createdAt,\n                imageUrl:resData.data.editPost.imageUrl\n              };\n            };\n            this.setState(prevState => {\n              const newPosts = [...prevState.posts];\n              if(prevState.editPost){\n                this.loadPosts();\n              }else{\n                //it will have 3 posts if not pop();\n                newPosts.unshift(post);\n                if(newPosts.length>2){\n                  newPosts.pop();\n                }\n              };\n              return {\n                posts:newPosts,\n                isEditing: false,\n                editPost: null,\n                editLoading: false\n              };\n            });\n          });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = postId => {\n    this.setState({ postsLoading: true });\n      const graphql = {query:`\n        mutation deletePost($id:String!){\n          deletePost(id:$id)\n        }\n      `,variables:{\n        id:postId\n        }\n      };\n    fetch(`http://18.144.156.150/graphql`, {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        \"Content-TYpe\":\"application/json\"\n      },\n      body:JSON.stringify(graphql)\n    })\n      .then(res => {\n        // if (res.status !== 200 && res.status !== 201) {\n        //   throw new Error('Deleting a post failed!');\n        // }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.loadPosts();\n        // this.setState(prevState => {\n        //   const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n        //   return { posts: updatedPosts, postsLoading: false };\n        // });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = error => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map(post => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString('en-US')}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n","import React, { Component } from 'react';\n\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\nclass SinglePost extends Component {\n  state = {\n    title: '',\n    author: '',\n    date: '',\n    image: '',\n    content: ''\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n    const graphql ={query:`\n      query{\n        getPost(id:\"${postId}\"){\n          title\n          creator{name}\n          imageUrl\n          createdAt\n          content\n        }\n      }\n    `}\n    fetch(`http://${process.env.REACT_APP_ADDRESSS}/graphql`, {\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        \"Content-Type\":\"application/json\"\n      },\n      method:\"POST\",\n      body:JSON.stringify(graphql)\n    })\n      .then(res => {\n        // if (res.status !== 200) {\n        //   throw new Error('Failed to fetch status');\n        // }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('single post',resData);\n        this.setState({\n          title: resData.data.getPost.title,\n          author: resData.data.getPost.creator.name,\n          image: `http://${process.env.REACT_APP_ADDRESSS}` + resData.data.getPost.imageUrl,\n          date: new Date(resData.data.getPost.createdAt).toLocaleDateString('en-US'),\n          content: resData.data.getPost.content\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n","import React from 'react';\n\nimport './Auth.css';\n\nconst auth = props => <section className=\"auth-form\">{props.children}</section>;\n\nexport default auth;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Login extends Component {\n  state = {\n    loginForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.loginForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.loginForm,\n        [input]: {\n          ...prevState.loginForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        loginForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        loginForm: {\n          ...prevState.loginForm,\n          [input]: {\n            ...prevState.loginForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form\n          onSubmit={e =>\n            this.props.onLogin(e, {\n              email: this.state.loginForm.email.value,\n              password: this.state.loginForm.password.value\n            })\n          }\n        >\n          <Input\n            id=\"email\"\n            label=\"Your Email ss\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.loginForm['email'].value}\n            valid={this.state.loginForm['email'].valid}\n            touched={this.state.loginForm['email'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.loginForm['password'].value}\n            valid={this.state.loginForm['password'].valid}\n            touched={this.state.loginForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Login\n          </Button>\n          <p style={{color:'red'}}>!!!-- email ' test@test.com ' password:' 12345 ' can be used for tests or regist a new account !!!</p>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Signup extends Component {\n  state = {\n    signupForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      name: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.signupForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.signupForm,\n        [input]: {\n          ...prevState.signupForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        signupForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        signupForm: {\n          ...prevState.signupForm,\n          [input]: {\n            ...prevState.signupForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form onSubmit={e => this.props.onSignup(e, this.state)}>\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.signupForm['email'].value}\n            valid={this.state.signupForm['email'].valid}\n            touched={this.state.signupForm['email'].touched}\n          />\n          <Input\n            id=\"name\"\n            label=\"Your Name\"\n            type=\"text\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'name')}\n            value={this.state.signupForm['name'].value}\n            valid={this.state.signupForm['name'].valid}\n            touched={this.state.signupForm['name'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.signupForm['password'].value}\n            valid={this.state.signupForm['password'].valid}\n            touched={this.state.signupForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Signup\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react'\nimport classes from './Footer.module.css'\nimport { NavLink } from 'react-router-dom';\n\nconst Footer = ()=>{\n\n  return (\n    <footer className={classes.footer__section}>\n      <div className={classes.content__section}>\n        <h2>Explore the News</h2>\n        <div className={classes.nav_container}>\n        <NavLink className={classes.nav} to='/'>terms of use</NavLink>\n        <NavLink className={classes.nav} to='/'>privacy policy</NavLink>\n        <NavLink className={classes.nav} to='/'>contact us</NavLink>\n        </div>\n      </div>\n    </footer>\n    );\n}\n\nexport default Footer;","import React, { Component, Fragment } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport MainNavigation from './components/Navigation/MainNavigation/MainNavigation';\nimport MobileNavigation from './components/Navigation/MobileNavigation/MobileNavigation';\nimport ErrorHandler from './components/ErrorHandler/ErrorHandler';\nimport FeedPage from './pages/Feed/Feed';\nimport SinglePostPage from './pages/Feed/SinglePost/SinglePost';\nimport LoginPage from './pages/Auth/Login';\nimport SignupPage from './pages/Auth/Signup';\nimport './App.css';\nimport Footer from './components/footer/Footer';\n\nclass App extends Component {\n  state = {\n    showBackdrop: false,\n    showMobileNav: false,\n    isAuth: false,\n    token: null,\n    userId: null,\n    authLoading: false,\n    error: null\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n  }\n\n  mobileNavHandler = isOpen => {\n    this.setState({ showMobileNav: isOpen, showBackdrop: isOpen });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ showBackdrop: false, showMobileNav: false, error: null });\n  };\n\n  logoutHandler = () => {\n    this.setState({ isAuth: false, token: null });\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiryDate');\n    localStorage.removeItem('userId');\n  };\n\n  loginHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    const graphqlQuery={query:`\n      query{\n        login(email:\"${authData.email}\",password:\"${authData.password}\"){token userId}\n      }\n    `}\n    fetch(`http://18.144.156.150/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n        // if (res.status === 422) {\n        //   throw new Error('Validation failed.');\n        // }\n        // if (res.status !== 200 && res.status !== 201) {\n        //   console.log('Error!');\n        //   throw new Error('Could not authenticate you!');\n        // }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState({\n          isAuth: true,\n          token: resData.data.login.token,\n          authLoading: false,\n          userId: resData.data.login.userId\n        });\n        //store token adn userId in localStorage\n        localStorage.setItem('token', resData.data.login.token);\n        localStorage.setItem('userId', resData.data.login.userId);\n        const remainingMilliseconds = 60 * 60 * 1000;\n        const expiryDate = new Date(\n          new Date().getTime() + remainingMilliseconds\n        );\n        localStorage.setItem('expiryDate', expiryDate.toISOString());\n        this.setAutoLogout(remainingMilliseconds);\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n  };\n\n  signupHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    const graphqlQuery = {\n      query: `\n        mutation {\n          createUser(userInput: {email: \"${\n            authData.signupForm.email.value\n          }\", name:\"${authData.signupForm.name.value}\", password:\"${\n        authData.signupForm.password.value\n      }\"}) {\n            _id\n            email\n          }\n        }\n      `\n    };\n    fetch(`http://18.144.156.150/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address isn't used yet!\"\n          );\n        }\n        if (resData.errors) {\n          throw new Error('User creation failed!');\n        }\n        console.log(resData);\n        this.setState({ isAuth: false, authLoading: false });\n        this.props.history.replace('/');\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n  };\n\n  setAutoLogout = milliseconds => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => (\n            <LoginPage\n              {...props}\n              onLogin={this.loginHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Route\n          path=\"/signup\"\n          exact\n          render={props => (\n            <SignupPage\n              {...props}\n              onSignup={this.signupHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.state.isAuth) {\n      routes = (\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <FeedPage userId={this.state.userId} token={this.state.token} />\n            )}\n          />\n          <Route\n            path=\"/:postId\"\n            render={props => (\n              <SinglePostPage\n                {...props}\n                userId={this.state.userId}\n                token={this.state.token}\n              />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.showBackdrop && (\n          <Backdrop onClick={this.backdropClickHandler} />\n        )}\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <Layout\n          header={\n            <Toolbar>\n              <MainNavigation\n                onOpenMobileNav={this.mobileNavHandler.bind(this, true)}\n                onLogout={this.logoutHandler}\n                isAuth={this.state.isAuth}\n              />\n            </Toolbar>\n          }\n          mobileNav={\n            <MobileNavigation\n              open={this.state.showMobileNav}\n              mobile\n              onChooseItem={this.mobileNavHandler.bind(this, false)}\n              onLogout={this.logoutHandler}\n              isAuth={this.state.isAuth}\n            />\n          }\n        />\n        {routes}\n       <Footer/>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}